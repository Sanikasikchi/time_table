"""
Django settings for DjangoDevelopment project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from inspect import currentframe
from pathlib import Path, os
from backend.installedapp import INSTALLED_APPS as IMPORTED_BACKEND_APPS

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(zy(t@6ieq+)@%z!li8$8uuf^$j+u3tl48p-ali7m+r)=zew($'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 'myapp',
    'widget_tweaks',
    'django_tables2',
    'rest_framework',
    'import_export',
] + IMPORTED_BACKEND_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # 'myapp.middleware.ExceptionLoggingMiddleware'
]

ROOT_URLCONF = 'DjangoDevelopment.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoDevelopment.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# DATABASES = {
#    'default': {
#       'ENGINE': 'django.db.backends.mysql',
#       'HOST': 'localhost',
#       'PORT': '3306',
#       'NAME': 'djangodevelopment',
#       'USER': 'root',
#       'PASSWORD': '',
#    }
#       'default': {
#       'ENGINE': 'django.db.backends.postgresql',
#       'HOST': 'localhost',
#       'PORT': '5000',
#       'NAME': 'djangodevelopment',
#       'USER': 'postgres',
#       'PASSWORD': 'Abhi@123',
#    }
# }

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
SITE_ROOT = os.path.dirname(os.path.realpath(__file__))
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static/"),
]
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

LOGGING = {
    'version': 1,                       # the dictConfig format version
    'disable_existing_loggers': False,  # retain the default loggers
    'handlers': {
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'general.log',
            'formatter': 'verbose2',
            'level': 'ERROR',
        },
    },
    'loggers': {
        '': {
            'level': 'ERROR',
            # 'level': 'DEBUG',
            'handlers': ['file'],
        },
    },
    'formatters': {
        'verbose2': {
            'format': '[{asctime}] [{levelname}] {name}:{lineno} - {funcName}() >> {message}',
            'style': '{',
        },
    },

}

EMAIL_HOST = "mail.invitratech.com"
EMAIL_PORT = 25
EMAIL_HOST_USER = "auth@invitratech.com"
EMAIL_HOST_PASSWORD = 'Au@2050@ITPL'
EMAIL_USE_TLS = True
ADMIN_EMAIL = 'abhishekunic2@gmail.com'
# EMAIL_USE_SSL = True


REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

IMPORT_EXPORT_USE_TRANSACTIONS = True